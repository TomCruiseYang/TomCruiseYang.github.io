"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# 构建项目内的文件路径，BASE_DIR指向项目根目录
BASE_DIR = Path(__file__).resolve().parent.parent


# 快速开发设置 - 不适合生产环境
# 参考 https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# 安全警告: 在生产环境中要保护好这个密钥，不要泄露
SECRET_KEY = 'django-insecure-g%v!4t5abyi%x!@94lq#w+&dq*ls_(bec-us8$!*2x%er*5+^)'

# 安全警告: 在生产环境中不要开启调试模式
DEBUG = True

# 允许访问的主机列表，空列表表示允许所有主机（仅限开发环境）
ALLOWED_HOSTS = []


# 应用定义 - 注册项目中使用的所有应用

INSTALLED_APPS = [
    # Django内置应用
    'django.contrib.admin',          # 管理后台
    'django.contrib.auth',           # 用户认证
    'django.contrib.contenttypes',   # 内容类型框架
    'django.contrib.sessions',       # 会话管理
    'django.contrib.messages',       # 消息框架
    'django.contrib.staticfiles',    # 静态文件管理
    
    # 自定义应用
    'blog',                          # 博客应用
    'accounts',                      # 用户账户应用
]

# 中间件 - 处理请求和响应的钩子函数
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',           # 安全中间件
    'django.contrib.sessions.middleware.SessionMiddleware',   # 会话中间件
    'django.middleware.common.CommonMiddleware',              # 通用中间件
    'django.middleware.csrf.CsrfViewMiddleware',              # CSRF保护中间件
    'django.contrib.auth.middleware.AuthenticationMiddleware', # 认证中间件
    'django.contrib.messages.middleware.MessageMiddleware',   # 消息中间件
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # 点击劫持保护
]

# 根URL配置，指向项目的主URL配置文件
ROOT_URLCONF = 'myblog.urls'

# 模板配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # 使用Django模板引擎
        'DIRS': [
            BASE_DIR / 'templates',  # 模板文件目录
        ],
        'APP_DIRS': True,            # 自动在每个应用的templates目录中查找模板
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',      # 请求上下文处理器
                'django.contrib.auth.context_processors.auth',     # 认证上下文处理器
                'django.contrib.messages.context_processors.messages', # 消息上下文处理器
            ],
        },
    },
]

# WSGI应用入口点
WSGI_APPLICATION = 'myblog.wsgi.application'


# 数据库配置
# 参考 https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # 使用SQLite数据库引擎
        'NAME': BASE_DIR / 'db.sqlite3',         # 数据库文件路径
    }
}


# 密码验证规则
# 参考 https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# 国际化设置
# 参考 https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'  # 语言代码

TIME_ZONE = 'UTC'        # 时区设置

USE_I18N = True          # 启用国际化

USE_TZ = True            # 启用时区支持


# 静态文件设置 (CSS, JavaScript, Images)
# 参考 https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'   # 静态文件URL前缀

# 默认主键字段类型
# 参考 https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # 使用BigAutoField作为默认主键类型
